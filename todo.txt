FRONTEND FEATURES

* Integrate the frontend. One view for everything. It's all in app.py right now,
  render_scores_with_lines(). Default to current week, dropdown for previous.
* Main page should colorize for in-progress games. It should also add the asterisk back to home team.
* Add leaderboard page and hyperlink it from the main view.
* Account login and authentication. Probably basic flask auth in the session.
* There is python in render_lines_with_scores which compares and renders the scores/picks,
  coloring them green etc. Convert that to javascript.

TIMING FEATURES

* Separate the database creation, service start, update calls, etc. Finish app.py and backend.py's
  relationship. It obviously must be able to restart the service and retain the same info.
  Remove the clause in backend.py which deletes the db if it exists.
* Figure out how it flushes week to week. Probably will have a separate route for each week, so
  people can reference back. This flush will also call fetch_lines, and will swap over once they're
  available. This can probably be manual for now, done by me on wed nights.

FINAL RELEASE STUFF

* Hosting the service publicly.
* tox lint and flake8, no pytest yet.

AFTER RELEASE FOLLOWUPS

* Port to a mobile app.
* Add cross checking and voting against multiple sources, becoming robust against external api
  change.
* Client key creation and verification.
* Add a random question at the end.
* Set up packaging.
* Add tests.
* Add pretty readme.
